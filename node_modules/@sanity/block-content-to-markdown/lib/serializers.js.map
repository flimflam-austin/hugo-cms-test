{"version":3,"sources":["../src/serializers.js"],"names":["require","getImageUrl","renderChildren","props","divider","Array","isArray","children","join","block","style","node","test","hashes","parseInt","RawMarkSerializer","char","link","mark","href","title","linkTitle","JSON","stringify","list","indentation","level","listItem","isBullet","index","image","alt","url","imgTitle","container","hardBreak","module","exports","types","marks","bind","em","code","strong","underline","markFallback"],"mappings":"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","file":"serializers.js","sourcesContent":["const {getImageUrl} = require('@sanity/block-content-to-hyperscript/internals')\n\nfunction renderChildren(props, divider = '') {\n  return Array.isArray(props.children) ? props.children.join(divider) : props.children\n}\n\nfunction block(props) {\n  const style = props.node.style || 'normal'\n\n  if (/^h\\d$/.test(style)) {\n    const hashes = new Array(parseInt(style[1], 10) + 1).join('#')\n    return `${hashes} ${renderChildren(props)}`\n  }\n\n  if (style === 'blockquote') {\n    return `> ${renderChildren(props)}`\n  }\n\n  return renderChildren(props)\n}\n\nfunction RawMarkSerializer(char, props) {\n  return `${char}${renderChildren(props)}${char}`\n}\n\nfunction link(props) {\n  const {href, title} = props.mark\n  const linkTitle = title ? ` ${JSON.stringify(title)}` : ''\n  return `[${renderChildren(props)}](${href}${linkTitle})`\n}\n\nfunction list(props) {\n  const indentation = new Array(props.level || 1).join('  ')\n  return indentation + renderChildren(props, `\\n${indentation}`)\n}\n\nfunction listItem(props) {\n  const isBullet = props.node.listItem === 'bullet'\n  const char = isBullet ? '*' : `${props.index + 1}.`\n  return `${char} ${renderChildren(props)}`\n}\n\nfunction image(props) {\n  const {title, alt} = props\n  const url = getImageUrl(props)\n  const imgTitle = title ? ` ${JSON.stringify(title)}` : ''\n  return `![${alt || ''}](${url}${imgTitle})`\n}\n\nfunction container(props) {\n  return renderChildren(props, '\\n\\n')\n}\n\nfunction hardBreak() {\n  return '  \\n'\n}\n\nmodule.exports = {\n  types: {\n    block,\n    image\n  },\n\n  marks: {\n    'strike-through': RawMarkSerializer.bind(null, '~~'),\n    em: RawMarkSerializer.bind(null, '_'),\n    code: RawMarkSerializer.bind(null, '`'),\n    strong: RawMarkSerializer.bind(null, '**'),\n    underline: renderChildren,\n    link\n  },\n\n  list,\n  listItem,\n  container,\n  hardBreak,\n  markFallback: renderChildren\n}\n"]}